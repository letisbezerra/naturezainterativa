#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Giraffe", "sound_mp3", "SpatialAudio"]
    def "Giraffe" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 3.1415927, 0)
        }
        references = @Materials/AnimalPlanet/savanna/Animals/Giraffe.usdz@
    )
    {
        quatf xformOp:orient = (-4.371139e-8, 0, 1, 0)
        float3 xformOp:scale = (0.05, 0.05, 0.05)
        float3 xformOp:translate = (-5, 0, -10)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Meshes" (
            active = false
        )
        {
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitCustomComponent "RealityKitContent_GestureComponent"
        {
            bool canScale = 0
            uniform token info:id = "RealityKitContent.GestureComponent"
            bool pivotOnDrag = 0
            bool preserveOrientationOnPivotDrag = 0
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (58.206146, 299.19995, 287.6081)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, -8.654739, 10.408417)
                }
            }
        }
    }

    def RealityKitAudioFile "sound_mp3"
    {
        uniform asset file = @Materials/AnimalPlanet/savanna/Sounds/giraffe-growl.mp3@
        uniform bool shouldLoop = 1
    }

    def Xform "SpatialAudio" (
        customData = {
            float3 rotationEulerHint = (0, 3.1415927, 0)
        }
    )
    {
        quatf xformOp:orient = (-4.371139e-8, 0, 1, 0)
        float3 xformOp:translate = (-1, 2, 0.17916599)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "SpatialAudio"
        {
            uniform token info:id = "RealityKit.SpatialAudio"
        }
    }
}

